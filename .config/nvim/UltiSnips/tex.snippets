# ------------------------------ #
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal
# ------------------------------ #


snippet begindoc "Begin document" bA
%! TEX root = main.tex

\newcommand{\titl}{${1:Title}}
\newcommand{\auth}{Daniel Brasholt s214675}
\newcommand{\courseno}{${2:Course number}}
\newcommand{\course}{${3:Course name}}
\newcommand{\dato}{${4:Date}}
\input{preamble.tex}

$0

\end{document}
endsnippet

snippet fig "Begin figure" b
\begin{figure}[H]
	\centering
	\includegraphics[width=0.8\textwidth]{${1:path}}
	\caption{${2:caption}}
	\label{fig:${3:label}}
\end{figure}

$0
endsnippet

snippet nn "Begin equation" bA
\begin{align}
	$1 
\end{align}

$0
endsnippet

snippet env "Begin environment" b
\begin{${1:env}}
	$2
\end{$1}

$0
endsnippet

snippet tt "\texttt{} command"
\texttt{${1:${VISUAL:}}}$0
endsnippet

snippet bf "\textbf{} command"
\textbf{${1:${VISUAL:}}}$0
endsnippet

snippet it "\textit{} command"
\textit{${1:${VISUAL:}}}$0
endsnippet

snippet hr "Hyperref package's \href{}{} command"
\href{${1:url}}{${2:display name}}$0
endsnippet

snippet "(^|[^a-zA-ZæÆøØåÅ])mm" "Inline LaTeX math" rA
`!p snip.rv = match.group(1)`\$ ${1:${VISUAL:}} \$$0
endsnippet

snippet "(^|[^a-zA-ZæÆøØåÅ])rr" "Inline reference" rA
`!p snip.rv = match.group(1)`\ref{${1:${VISUAL:}}}$0
endsnippet

snippet || "Verb environment" A
\verb|$1| $0
endsnippet

snippet sec "New section" bA
\section{${1:Heading}}

$0
endsnippet

snippet ssec "New subsection" bA
\subsection{${1:Heading}}

$0
endsnippet

snippet sssec "New subsubsection" bA
\subsubsection{${1:Heading}}

$0
endsnippet

snippet todo "Todo command" bA
\todo{$1}$0
endsnippet

# ---------------- #
# MATH #
# ---------------- #

context "math()"
snippet ff "Begin fraction" iA
\frac{$1}{$2} $0
endsnippet

context "math()"
snippet ee "Expand e^{}" iA
e^{$1}$0
endsnippet

context "math()"
snippet int "Expand \int_{}^{}" iA
\int_{$1}^{$2}{$3}$0
endsnippet

context "math()"
snippet inf "Expand \infty" iA
\infty$0
endsnippet

context "math()"
snippet __ "Expand _{}" iA
_{$1}$0
endsnippet

context "math()"
snippet ^ "Expand ^{}" iA
^{$1}$0
endsnippet
